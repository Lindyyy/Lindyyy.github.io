<?xml version="1.0" encoding="utf-8"?>


<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
    <title type="text">Hugo Theme MemE</title>
    <subtitle type="html">MemE is a powerful and highly customizable GoHugo theme for personal blogs.</subtitle>
    <updated>2020-08-25T11:11:17&#43;08:00</updated>
    <id>https://example.com/</id>
    <link rel="alternate" type="text/html" href="https://example.com/" />
    <link rel="self" type="application/atom&#43;xml" href="https://example.com/atom.xml" />
    <author>
            <name>reuixiy</name>
            <uri>https://example.com/</uri>
            
                <email>reuixiy@gmail.com</email>
            </author>
    <rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.en)</rights>
    <generator uri="https://gohugo.io/" version="0.74.3">Hugo</generator>
        <entry>
            <title type="text">Vim格式化json</title>
            <link rel="alternate" type="text/html" href="https://example.com/_post/vim%E6%A0%BC%E5%BC%8F%E5%8C%96json/" />
            <id>https://example.com/_post/vim%E6%A0%BC%E5%BC%8F%E5%8C%96json/</id>
            <updated>2020-08-25T10:40:12&#43;08:00</updated>
            <published>2020-08-19T12:16:08&#43;08:00</published>
            <author>
                    <name>reuixiy</name>
                    <uri>https://io-oi.me/</uri>
                    <email>reuixiy@gmail.com</email>
                    </author>
            <rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.en)</rights><summary type="html">最近遇到了将json文件爬过来然后储存到本地文件的问题
python保存json文件，可以使用json函数，在使用之前要导入库函数：
imprort json
   函数 描述     json.dumps 将Python对象编码为JSON字符串   json.loads 将已经编码的JSON字符串解码为Python对象     python pprint python strip() python 将dict()写入txt/json文件，https://blog.csdn.net/guoweish/article/details/47106263 vim中格式化json的命令:%!python -m json.tool git diff python startswith() 时间戳  </summary>
            
                <content type="html">&lt;p&gt;最近遇到了将json文件爬过来然后储存到本地文件的问题&lt;/p&gt;
&lt;p&gt;python保存json文件，可以使用&lt;code&gt;json&lt;/code&gt;函数，在使用之前要导入库函数：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;imprort json&lt;/code&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;函数&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;json.dumps&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;将Python对象编码为JSON字符串&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;json.loads&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;将已经编码的JSON字符串解码为Python对象&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;ul&gt;
&lt;li&gt;python pprint&lt;/li&gt;
&lt;li&gt;python strip()&lt;/li&gt;
&lt;li&gt;python 将dict()写入txt/json文件，https://blog.csdn.net/guoweish/article/details/47106263&lt;/li&gt;
&lt;li&gt;vim中格式化json的命令&lt;code&gt;:%!python -m json.tool&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;git diff&lt;/li&gt;
&lt;li&gt;python startswith()&lt;/li&gt;
&lt;li&gt;时间戳&lt;/li&gt;
&lt;/ul&gt;
</content>
            
            
            
            
            
                
                    
                
                    
                
            
        </entry>
    
        <entry>
            <title type="text">Test</title>
            <link rel="alternate" type="text/html" href="https://example.com/_post/test/" />
            <id>https://example.com/_post/test/</id>
            <updated>2020-08-18T19:01:26&#43;08:00</updated>
            <published>2020-08-18T18:32:37&#43;08:00</published>
            <author>
                    <name>reuixiy</name>
                    <uri>https://io-oi.me/</uri>
                    <email>reuixiy@gmail.com</email>
                    </author>
            <rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.en)</rights><summary type="html">welcome!
I have truned draft from true to false.</summary>
            
                <content type="html">&lt;p&gt;welcome!&lt;/p&gt;
&lt;p&gt;I have truned draft from true to false.&lt;/p&gt;
</content>
            
            
            
            
            
                
                    
                
                    
                
            
        </entry>
    
</feed>
